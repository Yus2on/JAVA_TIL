<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<!-- 컴포넌트 스캔 설정  -->
	<context:component-scan base-package="polymorphism4" />
	<!-- base-package 로 시작하는 모든 클래스들 중에서 @Component 가 붙어있는 클래스를 스캔해서 메모리에 올려라   -->
	

	<!--  실제로 사용할 Speaker 타입의 객체를 하나만 등록한다  -->
	<!--  자바소스 건들이지 않고 여기서만 애플/소니 변경으로 메서드 호출 가능   -->
	<!--  모든것을 다 어노테이션으로 설정하면 주석을 막고 풀고 하는게 불가피하기때문이 xml과 어노테이션 설정을 같이 사용  -->
	<bean class="polymorphism4.SonySpeaker"></bean>




	<!-- 스프링 IoC 컨테이너가 생성할 객체를 bean 등록한다 (Pre-Loading) 
		이렇게 하면 디폴트 생성자만 컨테이너가 로딩할 수 있음 
		<bean id="tv" class="polymorphism4.GoogleTv" 
			init-method="멤버변수초기화" 
			destroy-method="자원해제" 
			scope="prototype"></bean> 
		-->


	<!--  이렇게 하면 생성자 아규먼츠로 ref="speaker" 이 객체를 넘겨서 아규먼츠가 있는 생성자를 호출하게 됨  	
	<bean id="speaker" class="polymorphism4.SonySpeaker"></bean>

	<bean id="tv" class="polymorphism4.SamsungTv">
		<constructor-arg ref="speaker" />
		<constructor-arg value="15000" />
		 고정된 문자나 어떤 정수를 쓸댄 value 사용 
	</bean>
	
	
	<bean id="tv" class="polymorphism4.SamsungTv">
		<property name="speaker" ref="speaker"></property>
		<property name="price" value="120000"></property>
	</bean>
	
	
	
	 이렇게 하면 생성자 아규먼츠로 ref="speaker" 이 객체를 넘겨서 아규먼츠가 있는 생성자를 호출하게 됨	
	<bean id="speaker" class="polymorphism4.AppleSpeaker"></bean>

	<bean id="tv" class="polymorphism4.SamsungTv"
		p:speaker-ref="speaker"
		p:price="110000"></bean>
		ref가 붙으면 참조 안 붙으면 value 속성으로 이 값을 price 변수에 세팅해라  
		property를 사용하면 코드 길이가 길어지고 xml 용량이 커져서 이렇게 쓰게 되엇지만
		얘는 가독성이 떨어져서 잘 안 씀    
		
		-->
	
	



</beans>











